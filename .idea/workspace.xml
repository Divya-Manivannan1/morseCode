<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ed580f56-ebf0-462f-ab98-0b5baaa68117" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/sbt.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/scala_compiler.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/build.sbt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/build.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/MorseCode.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/MorseService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/Playground.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/Scanner.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/scala/MorseCodeTest.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/scala/MorseServiceTest.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="ScalaTest Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 4
}]]></component>
  <component name="ProjectId" id="2iQ1J93A76k4e6jDq4kPjYWQuGg" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.Playground.executor": "Run",
    "Application.Playround.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "ScalaTest.MorseCodeTest.EncodeMessageToMorse should convert a empty string to an empty string.executor": "Run",
    "ScalaTest.MorseCodeTest.EncodeMessageToMorse should convert a invalid input to None.executor": "Run",
    "ScalaTest.MorseCodeTest.GetLetter should convert a empty string to Null.executor": "Run",
    "ScalaTest.MorseCodeTest.executor": "Run",
    "ScalaTest.MorseServiceTest.executor": "Run",
    "ScalaTest.MorseServiceTest.morseToMessageService should morseToMessageServise.executor": "Run",
    "ScalaTest.MorseServiceTest.morseToMessageService should not throw an exception if a valid morse code is given.executor": "Run",
    "ScalaTest.MorseServiceTest.morseToMessageService should throw an exception if an invalid morse code is given.executor": "Run",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "ScalaTest",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.ScalaTest": "org.scalatest.funspec.AnyFunSpec",
    "git-widget-placeholder": "master",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/nmadh/Documents/scala divya/testing 2"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="org.scalatest.funspec.AnyFunSpec" />
      <recent name="org.scalatest.funsuite.AnyFunSuiteLike" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="MorseCodeTest" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="morseCode" />
      <option name="VMParameters" value="" />
      <option name="allowRunningInParallel" value="false" />
      <option name="alternativeJrePath" />
      <option name="alternativeJrePathEnabled" value="false" />
      <option name="classpathModifications">
        <list />
      </option>
      <option name="envs">
        <map />
      </option>
      <option name="passParentEnvs" value="true" />
      <option name="programParameters" value="" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <option name="testClassPath" value="MorseCodeTest" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MorseServiceTest" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="morseCode" />
      <option name="VMParameters" value="" />
      <option name="allowRunningInParallel" value="false" />
      <option name="alternativeJrePath" />
      <option name="alternativeJrePathEnabled" value="false" />
      <option name="classpathModifications">
        <list />
      </option>
      <option name="envs">
        <map />
      </option>
      <option name="passParentEnvs" value="true" />
      <option name="programParameters" value="" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <option name="testClassPath" value="MorseServiceTest" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MorseServiceTest.morseToMessageService should morseToMessageServise" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="morseCode" />
      <option name="VMParameters" value="" />
      <option name="allowRunningInParallel" value="false" />
      <option name="alternativeJrePath" />
      <option name="alternativeJrePathEnabled" value="false" />
      <option name="classpathModifications">
        <list />
      </option>
      <option name="envs">
        <map />
      </option>
      <option name="passParentEnvs" value="true" />
      <option name="programParameters" value="" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <option name="testClassPath" value="MorseServiceTest" />
      <option name="testName" value="morseToMessageService should morseToMessageServise" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MorseServiceTest.morseToMessageService should not throw an exception if a valid morse code is given" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="morseCode" />
      <option name="VMParameters" value="" />
      <option name="allowRunningInParallel" value="false" />
      <option name="alternativeJrePath" />
      <option name="alternativeJrePathEnabled" value="false" />
      <option name="classpathModifications">
        <list />
      </option>
      <option name="envs">
        <map />
      </option>
      <option name="passParentEnvs" value="true" />
      <option name="programParameters" value="" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <option name="testClassPath" value="MorseServiceTest" />
      <option name="testName" value="morseToMessageService should not throw an exception if a valid morse code is given" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MorseServiceTest.morseToMessageService should throw an exception if an invalid morse code is given" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="morseCode" />
      <option name="VMParameters" value="" />
      <option name="allowRunningInParallel" value="false" />
      <option name="alternativeJrePath" />
      <option name="alternativeJrePathEnabled" value="false" />
      <option name="classpathModifications">
        <list />
      </option>
      <option name="envs">
        <map />
      </option>
      <option name="passParentEnvs" value="true" />
      <option name="programParameters" value="" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <option name="testClassPath" value="MorseServiceTest" />
      <option name="testName" value="morseToMessageService should throw an exception if an invalid morse code is given" />
      <option name="workingDirectory" value="C:\Users\nmadh\Documents\scala divya\morseCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.MorseCodeTest" />
        <item itemvalue="ScalaTest.MorseServiceTest" />
        <item itemvalue="ScalaTest.MorseServiceTest.morseToMessageService should not throw an exception if a valid morse code is given" />
        <item itemvalue="ScalaTest.MorseServiceTest.morseToMessageService should throw an exception if an invalid morse code is given" />
        <item itemvalue="ScalaTest.MorseServiceTest.morseToMessageService should morseToMessageServise" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ed580f56-ebf0-462f-ab98-0b5baaa68117" name="Changes" comment="" />
      <created>1719407912698</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719407912698</updated>
    </task>
    <servers />
  </component>
</project>